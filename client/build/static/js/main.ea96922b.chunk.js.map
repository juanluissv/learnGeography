{"version":3,"sources":["constants/countryConstants.js","actions/countryActions.js","store.js","reducers/countryReducers.js","components/Landing.js","components/CountryCard.js","components/Pagination.js","components/Home.js","components/ActivityCard.js","components/Country.js","components/CountryCard2.js","components/Activity.js","components/Header.js","App.js","index.js"],"names":["COUNTRY_LIST_REQUEST","COUNTRY_LIST_SUCCESS","COUNTRY_LIST_FAIL","ACTIVITY_LIST_REQUEST","ACTIVITY_LIST_SUCCESS","ACTIVITY_LIST_FAIL","COUNTRY_DETAILS_REQUEST","COUNTRY_DETAILS_SUCCESS","SEARCH_COUNTRY_REQUEST","SEARCH_COUNTRY_SUCCESS","SEARCH_COUNTRY_FAIL","ACTIVITY_CREATE_REQUEST","ACTIVITY_CREATE_SUCCESS","ACTIVITY_CREATE_FAIL","ADD_COUNTRY","FILTER_COUNTRY","listCountries","dispatch","a","type","axios","get","data","payload","response","filterCountries","reducer","combineReducers","countryList","state","countries","action","loading","error","countryDetails","country","activityCreate","success","activity","addCountry","myCountries","searchListCountries","searchList","countriesFilter","myFilterCountries","isFilter","activityList","myactivities","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Landing","className","to","CountryCard","id","src","flag","name","continent","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","onClick","Home","useDispatch","useState","query","setQuery","useSelector","useEffect","currentPage","setCurrentPage","currentSearchCountries","currentFilterCountries","currentCountries","indexOfLastPost","indexOfFirstPost","slice","pageNumber","showPagination","console","log","length","onSubmit","e","preventDefault","config","headers","searchCountries","placeholder","value","onChange","target","sorted","reverse","b","sort","sorted2","population","filtrados","filter","includes","mynewcountries","activities","countryy","key","ActivityCard","duration","difficulty","season","Country","match","loading2","params","capital","subregion","area","CountryCard2","active","setActive","newCountry","countryID","disabled","Activity","history","setName","setDifficulty","setDuration","setSeason","post","Header","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea96922b.chunk.js","sourcesContent":["export const COUNTRY_LIST_REQUEST  = 'COUNTRY_LIST_REQUEST';\nexport const COUNTRY_LIST_SUCCESS  = 'COUNTRY_LIST_SUCCESS';\nexport const COUNTRY_LIST_FAIL     = 'COUNTRY_LIST_FAIL';\n\nexport const ACTIVITY_LIST_REQUEST  = 'ACTIVITY_LIST_REQUEST';\nexport const ACTIVITY_LIST_SUCCESS  = 'ACTIVITY_LIST_SUCCESS';\nexport const ACTIVITY_LIST_FAIL     = 'ACTIVITY_LIST_FAIL';\n\nexport const COUNTRY_DETAILS_REQUEST  = 'COUNTRY_DETAILS_REQUEST';\nexport const COUNTRY_DETAILS_SUCCESS  = 'COUNTRY_DETAILS_SUCCESS';\nexport const COUNTRY_DETAILS_FAIL     = 'COUNTRY_DETAILS_FAIL';\n\nexport const SEARCH_COUNTRY_REQUEST  = 'SEARCH_COUNTRY_REQUEST';\nexport const SEARCH_COUNTRY_SUCCESS  = 'SEARCH_COUNTRY_SUCCESS';\nexport const SEARCH_COUNTRY_FAIL     = 'SEARCH_COUNTRY_FAIL';\n\nexport const ACTIVITY_CREATE_REQUEST = 'ACTIVITY_CREATE_REQUEST'\nexport const ACTIVITY_CREATE_SUCCESS = 'ACTIVITY_CREATE_SUCCESS'\nexport const ACTIVITY_CREATE_FAIL = 'ACTIVITY_CREATE_FAIL'\n\nexport const ADD_COUNTRY  = 'ADD_COUNTRY';\n\nexport const FILTER_COUNTRY  = 'FILTER_COUNTRY';\n","import axios from 'axios';\nimport {\n    COUNTRY_LIST_REQUEST, \n    COUNTRY_LIST_SUCCESS, \n    COUNTRY_LIST_FAIL ,\n    COUNTRY_DETAILS_REQUEST,\n    COUNTRY_DETAILS_SUCCESS,\n    COUNTRY_DETAILS_FAIL,\n    ACTIVITY_CREATE_REQUEST,\n    ACTIVITY_CREATE_SUCCESS,\n    ACTIVITY_CREATE_FAIL,\n    SEARCH_COUNTRY_REQUEST,\n    SEARCH_COUNTRY_SUCCESS,\n    SEARCH_COUNTRY_FAIL,\n    ADD_COUNTRY,\n    FILTER_COUNTRY,\n    ACTIVITY_LIST_REQUEST,\n    ACTIVITY_LIST_SUCCESS,\n    ACTIVITY_LIST_FAIL\n} from '../constants/countryConstants';\n\n\nexport const listCountries = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: COUNTRY_LIST_REQUEST\n        })\n\n        const { data } = await axios.get('/api/countries');\n\n        dispatch({\n            type: COUNTRY_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: COUNTRY_LIST_FAIL,\n            payload: error.response\n        })\n\n    }\n}\n\nexport const listActivities = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: ACTIVITY_LIST_REQUEST\n        })\n\n        const { data } = await axios.get('/api/countries/myactivities');\n\n        dispatch({\n            type: ACTIVITY_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ACTIVITY_LIST_FAIL,\n            payload: error.response\n        })\n\n    }\n}\n\n\nexport const listCountryDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: COUNTRY_DETAILS_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.get(`/api/countries/${id}`, config);\n\n        dispatch({\n            type: COUNTRY_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: COUNTRY_DETAILS_FAIL,\n            payload: error\n        })\n\n    }\n}\n\nexport const searchCountries = (query) => async (dispatch) => {\n    try {\n        dispatch({\n            type: SEARCH_COUNTRY_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.get(`/api/countries?search=${query}`, config);\n\n        dispatch({\n            type: SEARCH_COUNTRY_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({            \n            type: SEARCH_COUNTRY_FAIL,\n            payload: error.response.data.error\n        })\n\n    }\n}\n\n\n\n\nexport const createActivity = (activity) => async(dispatch) => {\n    try {\n        dispatch({\n            type: ACTIVITY_CREATE_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/countries/activity', activity, config)\n\n        dispatch({\n            type: ACTIVITY_CREATE_SUCCESS,\n            payload: data\n        })\n\n        \n    } catch(error) {\n        dispatch({\n            type: ACTIVITY_CREATE_FAIL,\n            payload: error.response\n        })\n\n    }\n}\n\nexport const addCountry = (countryID) =>  (dispatch) => {\n    dispatch({\n        type: ADD_COUNTRY,\n        payload: countryID\n    })  \n};\n\n\nexport const filterCountries = (filterCountries) =>  (dispatch) => {\n    dispatch({\n        type: FILTER_COUNTRY,\n        payload: filterCountries\n    })  \n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { \n        countryListReducer, \n        countryDetailsReducer, \n        activityCreateReducer,\n        addCountryReducer,\n        searchCountriesReducer,\n        filterCountriesReducer,\n        activityListReducer\n} from './reducers/countryReducers';\n\nconst reducer = combineReducers({\n    countryList: countryListReducer,\n    countryDetails: countryDetailsReducer,\n    activityCreate: activityCreateReducer,\n    addCountry: addCountryReducer,\n    searchListCountries: searchCountriesReducer,\n    countriesFilter: filterCountriesReducer,\n    activityList: activityListReducer\n})\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;\n","import axios from 'axios';\nimport { addCountry } from '../actions/countryActions';\nimport {\n    COUNTRY_LIST_REQUEST, \n    COUNTRY_LIST_SUCCESS, \n    COUNTRY_LIST_FAIL ,\n    COUNTRY_DETAILS_REQUEST,\n    COUNTRY_DETAILS_SUCCESS,\n    COUNTRY_DETAILS_FAIL,\n    ACTIVITY_CREATE_SUCCESS,\n    ACTIVITY_CREATE_FAIL,\n    ACTIVITY_CREATE_REQUEST,\n    SEARCH_COUNTRY_REQUEST,\n    SEARCH_COUNTRY_SUCCESS,\n    SEARCH_COUNTRY_FAIL,\n    ADD_COUNTRY,\n    FILTER_COUNTRY,\n    ACTIVITY_LIST_REQUEST,\n    ACTIVITY_LIST_SUCCESS,\n    ACTIVITY_LIST_FAIL\n} from '../constants/countryConstants';\n\nexport const countryListReducer = (state = { countries: []}, action) => {\n    switch(action.type) {\n        case COUNTRY_LIST_REQUEST:\n            return  {\n                loading: true,\n                countries: []\n            }\n        case COUNTRY_LIST_SUCCESS:\n            return {\n                loading: false,\n                countries: action.payload\n            }\n        case COUNTRY_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const activityListReducer = (state = { myactivities: []}, action) => {\n    switch(action.type) {\n        case ACTIVITY_LIST_REQUEST:\n            return  {\n                loading: true,\n                myactivities: []\n            }\n        case ACTIVITY_LIST_SUCCESS:\n            return {\n                loading: false,\n                myactivities: action.payload\n            }\n        case ACTIVITY_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const countryDetailsReducer = (state = { country: {}}, action )=> {\n    switch(action.type) {\n        case COUNTRY_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n        case COUNTRY_DETAILS_SUCCESS:\n            return{\n                loading: false,\n                country: action.payload\n            }\n        case COUNTRY_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const searchCountriesReducer = (state = { searchList: []}, action) => {\n    switch(action.type) {\n        case SEARCH_COUNTRY_REQUEST:\n            return  {\n                success: false,\n                searchList: []\n            }\n        case SEARCH_COUNTRY_SUCCESS:\n            return {\n                success: true,\n                searchList: action.payload\n            }\n        case SEARCH_COUNTRY_FAIL:\n            return {\n                success: false,\n                error: action.payload\n            }\n        case 'SEARCH_COUNTRY_RESET':\n            return {\n                searchList: [],\n                success: false\n            }             \n        default:\n            return state\n    }\n}\n\nexport const activityCreateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ACTIVITY_CREATE_REQUEST:\n            return {}\n        case ACTIVITY_CREATE_SUCCESS:\n            return {\n                success: true,\n                activity: action.payload\n            }\n        case ACTIVITY_CREATE_FAIL:\n            return {\n                error: action.payload\n            }\n        default: \n            return state\n\n    }\n}\n\nexport const addCountryReducer = (state = { myCountries: [] }, action) => {\n    switch (action.type) {\n        case ADD_COUNTRY: \n            return {\n                ...state,\n                myCountries: [...state.myCountries, action.payload]\n            }\n        case 'COUNTRY_RESET':\n                return {\n                    myCountries: []\n                }        \n        default:\n            return state\n    }\n}\n\n\nexport const filterCountriesReducer = (state = { myFilterCountries: [] }, action) => {\n    switch (action.type) {\n        case FILTER_COUNTRY: \n            return {\n                isFilter: true,\n                myFilterCountries: action.payload\n            }\n        case 'FILTER_RESET': \n            return {\n                isFilter: false,\n                myFilterCountries: [],\n            }               \n        default:\n            return state\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst Landing = () => {\n\n\n    return (\n        <div>\n            \n            <div className=\"welcomeBody\">\n                <Link to=\"/home\" className=\"welcomeLink\">Enter</Link>     \n                <h3 className=\"welcome\">The best place to Learn about Geography</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Landing;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nconst CountryCard = ({country}) => {\n    return (\n        \n        <div className=\"column\">\n            <Link to={`country/${country.id}`} className=\"myLink\">\n\t\t\t<img src={country.flag} className=\"flagImg\" />\n\t\t\t    <h4 className=\"countryName\">{country.name}</h4>\n            </Link>\n            <p className=\"stock\">{country.continent}</p>\t\t\n        </div>          \n              \n    )\n}\n\nexport default CountryCard","\nimport React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <button onClick={() => paginate(number)}  className='page-link'>\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import React, { useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { listCountries, listActivities, searchCountries, filterCountries } from '../actions/countryActions';\nimport CountryCard from './CountryCard';\nimport Pagination from './Pagination';\n\n\n\nconst Home = () => {\n\n    const dispatch = useDispatch();\n\n    const [query, setQuery] = useState('');\n\n    const countryList = useSelector(state => state.countryList)\n    let { countries, loading } = countryList\n\n    const activityList = useSelector(state => state.activityList)\n    let { myactivities } = activityList\n   \n    const countriesFilter = useSelector(state => state.countriesFilter)\n    let { myFilterCountries, isFilter } = countriesFilter\n\n    const searchListCountries = useSelector(state => state.searchListCountries)\n    let { searchList, success, error } = searchListCountries\n    \n    useEffect(() => {\n        dispatch(listCountries())\n        dispatch(listActivities())\n    }, [dispatch])\n\n    //SEARCH\n    const getSearchCountries = (e) => {\n        e.preventDefault()\n        setQuery('')\n        setCurrentPage(1)\n        dispatch(searchCountries(query))\n      }\n\n    //PAGINATION\n    const [currentPage, setCurrentPage] = useState(1);\n    let currentSearchCountries = [];\n    let currentFilterCountries = [];\n    let currentCountries = [];\n\n    const [postsPerPage] = useState(10);      \n    // Get current posts\n    let indexOfLastPost = currentPage * postsPerPage;\n    let indexOfFirstPost = indexOfLastPost - postsPerPage;\n    \n    currentCountries = countries.slice(indexOfFirstPost, indexOfLastPost);\n    if (success == true) {\n         currentSearchCountries = searchList.slice(indexOfFirstPost, indexOfLastPost);\n    }\n    if (isFilter == true) {\n        currentFilterCountries = myFilterCountries.slice(indexOfFirstPost, indexOfLastPost);\n   }\n    // Change page\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);  \n\n    \n    let showPagination = true;\n        console.log(currentCountries.length)\n    if (currentCountries.length < 10) {\n        showPagination = false\n    }\n\n\n\n\n\n   //FILTERS\n    const filterName = (e) => {\n        let sorted;\n        if (e.target.value == 'DESC') {\n            sorted = [...countries].reverse((a, b) => b[countries.name] - a[countries.name]);\n        }\n        if (e.target.value == 'ASC') {\n            sorted = [...countries].sort((a, b) => b[countries.name] - a[countries.name]);\n        }\n        setCurrentPage(1)\n        dispatch({ type: 'SEARCH_COUNTRY_RESET' })\n        dispatch(filterCountries(sorted))              \n    }\n\n    const filterPopulation = (e) => { \n        let sorted2;   \n        if (e.target.value == 'ASC') {    \n            sorted2 = [...countries].sort((a,b) => a.population - b.population)\n        }\n        if (e.target.value == 'DESC') {    \n            sorted2 = [...countries].sort((a,b) => b.population - a.population)\n        }\n        setCurrentPage(1)\n        dispatch({ type: 'SEARCH_COUNTRY_RESET' })\n        dispatch(filterCountries(sorted2))              \n            \n    }\n\n    const filterContinent = (e) => {\n        const filtrados = countries.filter(country => {\n            return country.continent.includes(e.target.value) \n        })\n        setCurrentPage(1)\n        dispatch({ type: 'SEARCH_COUNTRY_RESET' })\n        dispatch(filterCountries(filtrados))        \n    }\n\n    const filterActivity = (e) => {\n        let mynewcountries = []\n        countries.map(country => {\n            if (country.activities.length > 0) {\n                country.activities.map(countryy => {\n                    if(countryy.name == e.target.value){\n                        mynewcountries.push(country)\n                    }\n                })\n            }\n        })\n        setCurrentPage(1)\n        dispatch({ type: 'SEARCH_COUNTRY_RESET' })\n        dispatch(filterCountries(mynewcountries))        \n    }\n    \n    console.log(showPagination)\n\n\n    return (\n        <>\n            {loading ? <p className=\"loading\">Loading...</p> :              \n                <div>\n                    \n                    <div className=\"content\">\n\t\t            <div className=\"row\">\n                    \n                        <div className=\"searchBox\">\n\n                        <div className=\"search\">\n                                <form onSubmit={getSearchCountries} >\n                                    <input \n                                        type=\"text\" \n                                        placeholder=\"Search country by name\" \n                                        value={query}\n                                        onChange={(e) => setQuery(e.target.value)}\n                                    />\n                                    <input type=\"submit\" value=\"search\" className=\"searchButton\" />\n                                </form>\n                            </div> \n\n                            <div className=\"user\">\n                                <Link to='/activity' className=\"myLink\">\n                                    <span>Create Activity</span>\n                                </Link>\n                            </div>\n                                                       \n\n                            <div className=\"user\">\n                                <i className=\"fa fa-user\"></i>Order by County Name<i className=\"fa fa-angle-down\"></i>\n                                <select  onChange={filterName} className=\"mySelect\">\n                                    <option value=\"ASC\">choose one</option>\n                                    <option value=\"ASC\">ASC</option>\n                                    <option value=\"DESC\">DESC</option>\n                                                                   \n                                </select>                            \n                            </div>\n\n                            <div className=\"user\">\n                                <i className=\"fa fa-user\"></i>Order by Population<i className=\"fa fa-angle-down\"></i>\n                                <select  onChange={filterPopulation} className=\"mySelect\">\n                                    <option value=\"ASC\">choose one</option>\n                                    <option value=\"ASC\">ASC</option>\n                                    <option value=\"DESC\">DESC</option>\n                                                                   \n                                </select>                            \n                            </div>\n                            \n\n                            <div className=\"user\">\n                                <i className=\"fa fa-user\"></i>Order by Continent<i className=\"fa fa-angle-down\"></i>\n                                <select  onChange={filterContinent} className=\"mySelect\">\n                                    <option value=\"Americas\">choose one</option>\n                                    <option value=\"Americas\">Americas</option>\n                                    <option value=\"Europe\">Europe</option>\n                                    <option value=\"Africa\">Africa</option>\n                                    <option value=\"Asia\">Asia</option>\n                                    <option value=\"Asia\">Oceania</option>\n                                </select>                            \n                            </div>\n                            <div className=\"user\">\n                                <i className=\"fa fa-user\"></i>Order by Activity<i className=\"fa fa-angle-down\"></i>\n                                <select  onChange={filterActivity} className=\"mySelect\">                                \n                                    <option value=\"\">choose one</option>                                 \n                                     {myactivities.map((e, key) => {\n                                        return <option key={key} value={e.value}>{e.name}</option>;\n                                    })}\n                                </select>                            \n                            </div>\n\n                                                         \n\n                            \n                            \n                        </div>\n                        \n\n                        { error ? <p className=\"myerror\">{error}</p> :\n                        success ? \n                            <div>\n                                {currentSearchCountries.map(country => ( \n                                    <CountryCard \n                                        key={country.id}\n                                        country={country}                            \n                                    />\n                                ))} \n                                    <Pagination\n                                        postsPerPage={postsPerPage}\n                                        totalPosts={searchList.length}\n                                        paginate={paginate}\n                                    />                               \n                            </div>\n                        : isFilter ?\n                            <div>\n                                {currentFilterCountries.map(country => ( \n                                    <CountryCard \n                                        key={country.id}\n                                        country={country}                            \n                                    />                                                                \n                                ))} \n                                { showPagination ? \n                                    <Pagination\n                                            postsPerPage={postsPerPage}\n                                            totalPosts={myFilterCountries.length}\n                                            paginate={paginate}\n                                        />\n                                : ''\n                                }\n                                <p className=\"yourPage\"> you are in page: {currentPage}</p>\n                            </div>\n                        :     \n                            <div>\n                                {currentCountries.map(country => ( \n                                    <CountryCard \n                                        key={country.id}\n                                        country={country}                            \n                                    />\n                                ))} \n                                    <Pagination\n                                        postsPerPage={postsPerPage}\n                                        totalPosts={countries.length}\n                                        paginate={paginate}\n                                    />\n                                    <p className=\"yourPage\"> you are in page: {currentPage}</p>\n                            </div>\n                        }        \n\n                    </div>\n                    </div>    \n\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nconst ActivityCard = ({activity}) => {\n    return (\n        \n        <div className=\"column\">\n\t\t\t<h4>Name: {activity.name}</h4>\n            <p className=\"stock\">Duration: {activity.duration}</p>\t\t\n            <p className=\"stock\">Difficulty: {activity.difficulty}</p>\t\t\n            <p className=\"stock\">Season: {activity.season}</p>\t\t\n\n        </div>          \n              \n    )\n}\n\nexport default ActivityCard","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listCountryDetails} from '../actions/countryActions';\nimport ActivityCard from './ActivityCard';\n\nconst Country = ({match}) => {\n\n    const dispatch = useDispatch()\n    let loading2 = false\n\n    const countryDetails = useSelector(state => state.countryDetails);\n    const { country, loading } = countryDetails\n    \n    useEffect(() => {\n        dispatch(listCountryDetails(match.params.id))\n    },[dispatch,match])\n\n    if ((loading == false ) && (country.activities.length > 0)) {\n        loading2 = true\n        console.log(loading2) \n\n    }        \n\n\n\n    return (\n        <>\n            {loading ? <p>Loading</p> : \n\n                <div className=\"column2\">\n                    <h3>{country.name}</h3>\n                    <img src={country.flag} className=\"flagImg2\" />\n                    <p className=\"stock\">Code: <span className=\"countryText\">{country.id}</span></p>\t\t\n                    <p className=\"stock\">Continent: <span className=\"countryText\">{country.continent}</span></p>\t\t\n                    <p className=\"stock\">Capital: <span className=\"countryText\">{country.capital}</span></p>\t\t\n                    <p className=\"stock\">SubRegion: <span className=\"countryText\">{country.subregion}</span> </p>\t\t\n                    <p className=\"stock\">Area: <span className=\"countryText\">{country.area}</span></p>\t\t\n                    <p className=\"stock\">Population: <span className=\"countryText\">{country.population}</span></p>\t\n                </div>\n            }\n\n            {loading2 ?  \n                <div>\n                    <h4 className=\"countActi\">Activities for this Country:</h4>\n                    {country.activities.map(activity => ( \n                            <ActivityCard \n                                key={activity.id}\n                                activity={activity}                            \n                            />\n                    ))} \n                </div>  \n                 :\n                 <p>No Activities</p>  \n            }\n        </> \n    )\n}\n\nexport default Country;","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCountry } from '../actions/countryActions';\n\nconst CountryCard2 = ({country}) => {\n\n    const dispatch = useDispatch()\n\n    const [active, setActive] = useState(false)\n\n    const newCountry = (countryID) => {\n        setActive(true)\n        dispatch(addCountry(countryID))\n    }\n\n    return (\n        \n        <div className=\"column\">\n\t\t\t<img src={country.flag} className=\"flagImg\" />\n\t\t\t    <h4>{country.name}</h4>\n            <button \n                onClick={(e) => newCountry(country.id)}\n                disabled={active}\n                className=\"myButton2\"\n            >\n                Add Country\n            </button>\t\t\n        </div>          \n              \n    )\n}\n\nexport default CountryCard2","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createActivity, listCountries, addCountry } from '../actions/countryActions';\nimport CountryCard2 from './CountryCard2';\n\n\nconst Activity = ({history}) => {\n\nconst dispatch = useDispatch()\n\nconst [name, setName] = useState('');\nconst [difficulty, setDifficulty] = useState('1');\nconst [duration, setDuration] = useState('');\nconst [season, setSeason] = useState('Winter');\n\nconst countryList = useSelector(state => state.countryList)\nconst { countries, loading } = countryList\n\nconst addCountry = useSelector(state => state.addCountry)\nconst { myCountries } = addCountry\nconsole.log(myCountries)\n\n\nconst handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(createActivity({name, difficulty, duration, season, myCountries}))\n    dispatch({ type: 'COUNTRY_RESET' })\n    dispatch(listCountries())\n    history.push('/home')\n}\n\n\n    return (\n    <div>\n      <div className=\"activityForm\">\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input className=\"myInput\"\n                  type=\"text\" \n                  placeholder=\"Enter name\"\n                  name=\"name\" \n                  value={name} \n                  onChange={(e) => setName(e.target.value)} \n          />         \n        </div>\n        <div>\n          <label>Difficulty:</label>\n          <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)} className=\"mySelect2\">\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n          </select>         \n        </div>\n        <div>\n          <label>duration:</label>\n          <input className=\"myInput\"\n                  type=\"text\" \n                  placeholder=\"Enter Duration\"\n                  name=\"duration\" \n                  value={duration} \n                  onChange={(e) => setDuration(e.target.value)} \n          />         \n        </div>\n        <div>\n          <label>Season:</label>\n          <select value={season} onChange={(e) => setSeason(e.target.value)} className=\"mySelect2\">\n            <option value=\"Winter\">Winter</option>\n            <option value=\"Summer\">Summer</option>\n            <option value=\"Spring\">Spring</option>\n            <option value=\"Fall\">Fall</option>\n          </select>       \n        </div>\n           \n          <input type=\"submit\" className=\"submitAct\"/>\n      </form>\n      </div>\n      <h3 className=\"addCountry\">Add Countries to the Activity</h3>\n      {countries.map(country => ( \n        <CountryCard2 \n        key={country.id}\n        country={country}                            \n        />\n      ))} \n\n    </div>        \n    )\n}\n\nexport default Activity;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { listCountries, searchCountries, filterCountries } from '../actions/countryActions';\n\nconst Header = () => {\n\n    const dispatch = useDispatch();\n    \n\n    const goHome = () => {\n        dispatch({ type: 'SEARCH_COUNTRY_RESET' })\n        dispatch({ type: 'FILTER_RESET' })\n        dispatch(listCountries())\n    }\n    \n    return (\n        <header className=\"header\">\n            <div className=\"logo\">\n            <Link to='/home' className=\"myLink\" onClick={goHome}>\n                <h1><span className=\"e\">Learn Geography</span></h1>\n            </Link>\n            \n            </div>\n        </header>\n    )\n}\n\nexport default Header","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport Home from './components/Home';\nimport Country from './components/Country'\nimport Activity from './components/Activity'\nimport Header from './components/Header'\n\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"container\">\n          <Route path='/' component={Header}  />\n          <Route path='/' component={Landing} exact />\n          <Route path='/home' component={Home} />\n          <Route path='/country/:id' component={Country} exact/>\n          <Route path='/activity' component={Activity} />\n        </div>\n  </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}